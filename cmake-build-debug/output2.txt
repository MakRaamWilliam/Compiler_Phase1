METHOD_BODY-->STATEMENT_LIST 
STATEMENT_LIST-->STATEMENT STATEMENT_LISTDA 
STATEMENT-->DECLARATION 
DECLARATION-->PRIMITIVE_TYPE id ; 
PRIMITIVE_TYPE-->int 
match: int
match: id
match: ;
STATEMENT_LISTDA-->STATEMENT STATEMENT_LISTDA 
STATEMENT-->ASSIGNMENT 
ASSIGNMENT-->id assign EXPRESSION ; 
match: id
match: assign
EXPRESSION-->SIMPLE_EXPRESSION EXPRESSIONDA 
SIMPLE_EXPRESSION-->TERM SIMPLE_EXPRESSIONDA 
TERM-->FACTOR TERMDA 
FACTOR-->num 
match: num
TERMDA-->eps 
SIMPLE_EXPRESSIONDA-->eps 
EXPRESSIONDA-->eps 
match: ;
STATEMENT_LISTDA-->STATEMENT STATEMENT_LISTDA 
STATEMENT-->IF 
IF-->if ( EXPRESSION ) { STATEMENT } else { STATEMENT } 
match: if
match: (
EXPRESSION-->SIMPLE_EXPRESSION EXPRESSIONDA 
SIMPLE_EXPRESSION-->TERM SIMPLE_EXPRESSIONDA 
TERM-->FACTOR TERMDA 
FACTOR-->id 
match: id
TERMDA-->eps 
SIMPLE_EXPRESSIONDA-->eps 
EXPRESSIONDA-->relop SIMPLE_EXPRESSION 
match: relop
SIMPLE_EXPRESSION-->TERM SIMPLE_EXPRESSIONDA 
TERM-->FACTOR TERMDA 
FACTOR-->num 
match: num
TERMDA-->eps 
SIMPLE_EXPRESSIONDA-->eps 
match: )
match: {
STATEMENT-->ASSIGNMENT 
ASSIGNMENT-->id assign EXPRESSION ; 
match: id
match: assign
EXPRESSION-->SIMPLE_EXPRESSION EXPRESSIONDA 
SIMPLE_EXPRESSION-->TERM SIMPLE_EXPRESSIONDA 
TERM-->FACTOR TERMDA 
FACTOR-->num 
match: num
TERMDA-->eps 
SIMPLE_EXPRESSIONDA-->eps 
EXPRESSIONDA-->eps 
match: ;
match: }
Error from terminal else $
Error from terminal { $
Error from Sync STATEMENT $
Error from terminal } $
STATEMENT_LISTDA-->eps 
match: $
